<div class="flex flex-col items-center bg-gray-100 p-3 pt-1">
  <div class="w-full max-w-3xl bg-white rounded-lg shadow-lg p-4 pt-2">
    <h1 class="text-2xl font-bold mb-3 text-center text-emerald-600">Spotify Player</h1>
    
    <% if !session[:spotify_user_id] %>
      <div class="text-center p-8">
        <p class="mb-4 text-lg">Sign in with your Spotify Premium account to start playing music.</p>
        <a href="/auth/spotify" class="inline-block bg-emerald-500 hover:bg-emerald-600 text-white font-bold py-2 px-6 rounded-full">
          Sign in with Spotify
        </a>
      </div>
    <% else %>
      <div data-controller="spotify-player" data-spotify-player-token-value="<%= current_spotify_user&.access_token %>">
        <!-- Playlists Section -->
        <div class="mb-4">
          <h2 class="text-lg font-semibold mb-2">Playlists</h2>
          <div class="grid grid-cols-1 md:grid-cols-2 gap-3">
            <% if @playlists&.any? %>
              <% @playlists.each do |playlist| %>
                <div class="border border-gray-200 rounded-lg p-3 flex items-center hover:bg-gray-50 transition cursor-pointer"
                     data-action="click->spotify-player#playPlaylist"
                     data-playlist-uri="<%= playlist.uri %>"
                     data-playlist-name="<%= playlist.name %>">
                  <% if playlist.images&.any? %>
                    <img src="<%= playlist.images.first['url'] %>" alt="<%= playlist.name %>" class="w-16 h-16 object-cover rounded mr-3">
                  <% else %>
                    <div class="w-16 h-16 bg-gray-200 rounded mr-3 flex items-center justify-center">
                      <span class="text-gray-500">No Image</span>
                    </div>
                  <% end %>
                  <div class="flex-grow">
                    <h3 class="font-medium"><%= playlist.name.start_with?("K:") ? playlist.name[2..-1] : playlist.name %></h3>
                    <p class="text-sm text-gray-600">
                      <% if playlist.respond_to?(:tracks) && playlist.tracks.respond_to?(:total) %>
                        <%= playlist.tracks.total %> tracks
                      <% elsif playlist.respond_to?(:tracks) && playlist.tracks.is_a?(Array) %>
                        <%= playlist.tracks.length %> tracks
                      <% else %>
                        Tracks: N/A
                      <% end %>
                    </p>
                  </div>
                  <button class="bg-emerald-500 hover:bg-emerald-600 text-white rounded-full p-2">
                    <svg class="w-5 h-5" fill="currentColor" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg">
                      <path fill-rule="evenodd" d="M10 18a8 8 0 100-16 8 8 0 000 16zM9.555 7.168A1 1 0 008 8v4a1 1 0 001.555.832l3-2a1 1 0 000-1.664l-3-2z" clip-rule="evenodd"></path>
                    </svg>
                  </button>
                </div>
              <% end %>
            <% else %>
              <div class="col-span-2 p-4 text-center bg-gray-50 rounded-lg">
                <p>No playlists found. Create some playlists in your Spotify account first.</p>
              </div>
            <% end %>
          </div>
        </div>

        <!-- Player Container -->
        <div id="player-container" class="mb-4">
          <div id="spotify-player" class="w-full h-16 bg-gray-200 rounded mb-3 flex items-center p-2">
            <!-- Album Image -->
            <div class="h-full aspect-square mr-3">
              <img data-spotify-player-target="albumImage" class="h-full w-full object-cover rounded" src="" alt="Album Cover" style="display: none;">
            </div>
            <!-- Track Info -->
            <div class="flex-grow">
              <div data-spotify-player-target="trackName" class="font-medium text-gray-900 truncate"></div>
              <div data-spotify-player-target="trackArtist" class="text-sm text-gray-600 truncate"></div>
            </div>
          </div>
          
          <div class="flex flex-wrap justify-center gap-3 mt-2">
            <button data-action="click->spotify-player#previousTrack" class="bg-emerald-500 hover:bg-emerald-600 text-white font-bold py-2 px-4 rounded">
              Previous
            </button>
            <button data-spotify-player-target="playButton" data-action="click->spotify-player#togglePlayback" class="bg-emerald-500 hover:bg-emerald-600 text-white font-bold py-2 px-4 rounded flex items-center">
              <svg class="w-5 h-5 mr-1" fill="currentColor" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg">
                <path fill-rule="evenodd" d="M10 18a8 8 0 100-16 8 8 0 000 16zM9.555 7.168A1 1 0 008 8v4a1 1 0 001.555.832l3-2a1 1 0 000-1.664l-3-2z" clip-rule="evenodd"></path>
              </svg>
              Play/Pause
            </button>
            <button data-action="click->spotify-player#nextTrack" class="bg-emerald-500 hover:bg-emerald-600 text-white font-bold py-2 px-4 rounded">
              Next
            </button>
          </div>
        </div>
        
        <div id="now-playing" class="text-center mb-3">
          <!-- Removed heading since we already show this info in the player box -->
          <!-- Status text hidden as it's displayed in the spotify-player element -->
          <p data-spotify-player-target="status" class="text-gray-700 hidden">No track currently playing</p>
          <p id="device-status" class="text-sm text-gray-500">Connecting to Spotify...</p>
        </div>
      </div>
      
      <div class="text-center mt-3">
        <%= button_to logout_path, method: :get, class: "text-sm text-emerald-600 hover:text-emerald-800" do %>
          Sign out
        <% end %>
      </div>
      
      <script>
        document.addEventListener('DOMContentLoaded', () => {
          const deviceStatusElement = document.getElementById('device-status');
          const token = '<%= current_spotify_user&.access_token %>';
          
          // Listen for Spotify player events
          document.addEventListener('spotify:ready', (event) => {
            deviceStatusElement.textContent = 'Connected to Spotify';
            
            const { device_id } = event.detail;
            
            // Transfer playback to this device
            fetch('https://api.spotify.com/v1/me/player', {
              method: 'PUT',
              headers: {
                'Authorization': `Bearer ${token}`,
                'Content-Type': 'application/json',
              },
              body: JSON.stringify({
                device_ids: [device_id],
                play: false,
              }),
            });
          });
          
          document.addEventListener('spotify:notReady', () => {
            deviceStatusElement.textContent = 'Disconnected from Spotify';
          });
          
          document.addEventListener('spotify:error', (event) => {
            console.error('Player error:', event.detail);
            deviceStatusElement.textContent = `Error: ${event.detail.message}`;
          });
        });
      </script>
    <% end %>
  </div>
</div>
